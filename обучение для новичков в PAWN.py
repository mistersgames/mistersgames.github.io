def show_arrays():
    print("""
üìö –ú–∞—Å—Å–∏–≤—ã –≤ PAWN:
–ú–∞—Å—Å–∏–≤—ã —Ö—Ä–∞–Ω—è—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–¥ –æ–¥–Ω–∏–º –∏–º–µ–Ω–µ–º. –ü—Ä–∏–º–µ—Ä—ã:

1. –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞:
   new telefon[2] = {"Android", "Apple"};
   
2. –î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º:
   printf("–ü–µ—Ä–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: %s", telefon[0]);

3. –ú–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã (–º–∞—Ç—Ä–∏—Ü—ã):
   new matrix[2][3] = {
        {1, 2, 3},
        {4, 5, 6}
   };

4. –°—Ç—Ä–æ–∫–∏ –∫–∞–∫ –º–∞—Å—Å–∏–≤—ã —Å–∏–º–≤–æ–ª–æ–≤:
   new message[] = "–ü—Ä–∏–≤–µ—Ç";
   message[0] = 'X';

üîë –ö–ª—é—á–µ–≤–æ–µ:
- –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
- –†–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏
- –°—Ç—Ä–æ–∫–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω—É–ª–µ–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º (\\0)
""")

def show_variables():
    print("""
üì¶ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ PAWN:
–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.

1. –û–±—ä—è–≤–ª–µ–Ω–∏–µ:
   new playerScore = 100;
   new Float:health = 75.5;

2. –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:
   - –¶–µ–ª—ã–µ —á–∏—Å–ª–∞ (new x = 10;)
   - –î—Ä–æ–±–Ω—ã–µ (Float: new Float:y = 3.14;)
   - –ë—É–ª–µ–≤—ã (bool: new bool:isAdmin = true;)

3. –û–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏:
   - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ (–≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–π)
   - –õ–æ–∫–∞–ª—å–Ω—ã–µ (–≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π)
   - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ (—Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏)

4. –ü—Ä–∏–º–µ—Ä:
   new count = 5;
   count += 3; // –¢–µ–ø–µ—Ä—å 8
   printf("–ó–Ω–∞—á–µ–Ω–∏–µ: %d", count);
""")

def show_defines():
    print("""
üéØ #define –≤ PAWN:
–î–∏—Ä–µ–∫—Ç–∏–≤—ã –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –º–∞–∫—Ä–æ—Å–æ–≤.

1. –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã:
   #define MAX_PLAYERS 100
   #define SERVER_NAME "My Server"

2. –ú–∞–∫—Ä–æ—Å—ã:
   #define IsValid(%0) (%0 != INVALID_PLAYER_ID)

3. –£—Å–ª–æ–≤–Ω–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è:
   #if defined _SAMP
        #include <a_samp>
   #endif

4. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   if (playerid < MAX_PLAYERS) {
        SendClientMessage(playerid, COLOR_WHITE, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!");
   }
""")

def show_systems():
    print("""
üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –≤ PAWN:
–°–∏—Å—Ç–µ–º—ã - –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –±–∏–∑–Ω–µ—Å—ã –∏ —Ç.–¥.)

1. –ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã:
   –∞) –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
   –±) –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   –≤) –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫—É

2. –ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤:

   // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
   enum PlayerData {
        pName[MAX_PLAYER_NAME],
        pPassword[32],
        pScore
   }
   new PlayerInfo[MAX_PLAYERS][PlayerData];

   // –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
   public OnPlayerRegister(playerid, password[]) {
        strcpy(PlayerInfo[playerid][pPassword], password, 32);
        PlayerInfo[playerid][pScore] = 0;
   }

   // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
   public SavePlayerData(playerid) {
        new file[40];
        format(file, sizeof(file), "accounts/%s.ini", PlayerInfo[playerid][pName]);
        // –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª...
   }
""")

def show_commands():
    print("""
‚å®Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ PAWN:
–ö–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –≤–≤–æ–¥ –∏–≥—Ä–æ–∫–∞ (/–∫–æ–º–∞–Ω–¥–∞)

1. –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫:
   public OnPlayerCommandText(playerid, cmdtext[]) {
        if (strcmp("/help", cmdtext, true) == 0) {
            SendClientMessage(playerid, -1, "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º...");
            return 1;
        }
        return 0;
   }

2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ sscanf (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
   CMD:stats(playerid) {
        new targetid;
        if(sscanf(params, "u", targetid)) 
            return SendClientMessage(playerid, -1, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /stats [–∏–≥—Ä–æ–∫]");
        
        new str[128];
        format(str, sizeof(str), "–£—Ä–æ–≤–µ–Ω—å: %d", PlayerInfo[targetid][pLevel]);
        SendClientMessage(playerid, -1, str);
        return 1;
   }

3. ZCMD + sscanf (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ):
   zcmd: /heal [playerid] [amount]
   CMD:heal(playerid, params[]) {
        new targetid, amount;
        if(sscanf(params, "ud", targetid, amount)) 
            return SendClientMessage(playerid, -1, "/heal [id] [–∫–æ–ª-–≤–æ]");
        
        SetPlayerHealth(targetid, amount);
        return 1;
   }
""")

def show_dialog_integration():
    print("""
üí¨ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—ã/—Å–∏—Å—Ç–µ–º—ã:
–î–∏–∞–ª–æ–≥–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–≥—Ä–æ–∫–æ–º

1. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤ –∫–æ–º–∞–Ω–¥–µ:

   CMD:settings(playerid) {
        ShowPlayerDialog(playerid, DIALOG_SETTINGS, DIALOG_STYLE_LIST, 
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ß–∞—Ç\n–ó–≤—É–∫–∏\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–í—ã–±—Ä–∞—Ç—å", "–ù–∞–∑–∞–¥");
        return 1;
   }

2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ OnDialogResponse:

   public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
        if(dialogid == DIALOG_SETTINGS && response) {
            switch(listitem) {
                case 0: ShowChatSettings(playerid);
                case 1: ShowSoundSettings(playerid);
                case 2: ShowControlSettings(playerid);
            }
        }
        return 1;
   }

3. –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è):

   CMD:register(playerid) {
        ShowPlayerDialog(playerid, DIALOG_REG_EMAIL, DIALOG_STYLE_INPUT, 
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:", "–î–∞–ª–µ–µ", "–û—Ç–º–µ–Ω–∞");
        return 1;
   }

   // –í OnDialogResponse:
   case DIALOG_REG_EMAIL:
        if(!response) return 1;
        if(ValidateEmail(inputtext)) {
            gPlayerTempEmail[playerid] = inputtext; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            ShowPlayerDialog(playerid, DIALOG_REG_PASS, DIALOG_STYLE_PASSWORD, 
                "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å:", "–ó–∞–≤–µ—Ä—à–∏—Ç—å", "–ù–∞–∑–∞–¥");
        } else {
            ShowError(playerid, "–ù–µ–≤–µ—Ä–Ω—ã–π email!");
        }
        break;
""")

def show_connecting_dialogs():
    print("""
üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ –∫–æ–º–∞–Ω–¥:
–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã

1. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:

   // –í –Ω–∞—á–∞–ª–µ —Å–∫—Ä–∏–ø—Ç–∞
   #define DIALOG_LOGIN 1
   #define DIALOG_BANK 2

   // –ü—Ä–∏ –≤—Ö–æ–¥–µ –∏–≥—Ä–æ–∫–∞
   public OnPlayerConnect(playerid) {
        ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_INPUT, 
            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:", "–í–æ–π—Ç–∏", "–í—ã—Ö–æ–¥");
        return 1;
   }

2. –°–≤—è–∑—å –∫–æ–º–∞–Ω–¥—ã —Å –¥–∏–∞–ª–æ–≥–æ–º:

   CMD:bank(playerid) {
        if(!IsPlayerNearBank(playerid)) 
            return SendClientMessage(playerid, COLOR_RED, "–í—ã –Ω–µ –≤ –±–∞–Ω–∫–µ!");
        
        ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, 
            "–ë–∞–Ω–∫", "–ë–∞–ª–∞–Ω—Å\n–ü–æ–ª–æ–∂–∏—Ç—å\n–°–Ω—è—Ç—å", "–í—ã–±—Ä–∞—Ç—å", "–ó–∞–∫—Ä—ã—Ç—å");
        return 1;
   }

3. –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –¥–∏–∞–ª–æ–≥–∞–º–∏ (–∫–∞—Å–∫–∞–¥–Ω—ã–µ –º–µ–Ω—é):

   public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
        if(dialogid == DIALOG_BANK && response) {
            switch(listitem) {
                case 0: ShowBalance(playerid); // –û—Ç–∫—Ä—ã–≤–∞–µ—Ç DIALOG_BALANCE
                case 1: ShowDepositDialog(playerid); // DIALOG_DEPOSIT
                case 2: ShowWithdrawDialog(playerid); // DIALOG_WITHDRAW
            }
        }
        return 1;
   }

4. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö:
   new gDialogCache[MAX_PLAYERS][128]; // –ë—É—Ñ–µ—Ä –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –¥–∏–∞–ª–æ–≥–∞–º–∏

   // –í –∫–æ–º–∞–Ω–¥–µ:
   CMD:report(playerid) {
        gDialogCache[playerid] = 0; // –°–±—Ä–æ—Å –∫—ç—à–∞
        ShowPlayerDialog(playerid, DIALOG_REPORT_TYPE, ...);
   }

   // –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –¥–∏–∞–ª–æ–≥–∞:
   case DIALOG_REPORT_TYPE:
        gDialogCache[playerid] = listitem; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Ä–µ–ø–æ—Ä—Ç–∞
        ShowPlayerDialog(playerid, DIALOG_REPORT_DETAILS, ...);
        break;
""")

def main():
    menu = """
=== PAWN –î–õ–Ø –ù–ê–ß–ò–ù–ê–Æ–©–ò–• ===


–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:
	
1. üìö –ú–∞—Å—Å–∏–≤—ã
2. üì¶ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
3. üéØ #define
4. üõ†Ô∏è –°–∏—Å—Ç–µ–º—ã
5. ‚å®Ô∏è –ö–æ–º–∞–Ω–¥—ã
6. üí¨ –î–∏–∞–ª–æ–≥–∏ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö/—Å–∏—Å—Ç–µ–º–∞—Ö
7. üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤/–∫–æ–º–∞–Ω–¥
0. üö™ –í—ã—Ö–æ–¥

BY MISTER ODIN
–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É —Ç–µ–º—ã > """
    
    while True:
        choice = input(menu).strip()
        
        if choice == "1":
            show_arrays()
        elif choice == "2":
            show_variables()
        elif choice == "3":
            show_defines()
        elif choice == "4":
            show_systems()
        elif choice == "5":
            show_commands()
        elif choice == "6":
            show_dialog_integration()
        elif choice == "7":
            show_connecting_dialogs()
        elif choice == "0":
            print("–£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ PAWN! üëã")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

if __name__ == "__main__":
    main()